#!/usr/bin/env bash
###
# DRUSH
#
# Run drush in a container, connected to source volumes and 
# linked to other containers.
# This lets you run drush as though it was installed on the 
# host, but without installing php or anything on the host
#
#     $/> wundertools drush cc all
#

if [ ! -f "${PATH_SOURCE}/vendor/bin/drush" ]; then
  echo "WARNING: there is no drush in this project, which probably mean that you have not run composer in your project."
  exit 1
fi

CONTAINER_ARGS="$@"
# echo ">>>>>DOCKER:DRUSH START [CMD: ${CONTAINER_ARGS}]
# "

docker run --rm -t -i \
    --net "${COMPOSE_NETWORK}" \
    --hostname=${PROJECT} \
    --link="${PROJECT}_db_1:db.app" \
    --volumes-from="${PROJECT}_source_1" \
    --volume="${PATH_SOURCE}/drush:/app/.drush" \
    --volume="${PATH_HOME}/.ssh:/app/.ssh" \
    -w=/app/web \
    --name="${PROJECT}_drush" \
    --user=app \
    --entrypoint="php" \
    ${DOCKER_IMAGE_DEVELOPERTOOL} \
    /app/vendor/drush/drush/drush \
    ${CONTAINER_ARGS}

# echo "
# <<<<<DOCKER:DRUSH END "
